pipeline {
    agent any

    environment {
        FPT_ACR_CREDENTIALS = credentials('ECR-ACCESS-KEY')
        FPT_ACR_URL = "563958919552.dkr.ecr.ap-northeast-2.amazonaws.com/testecr"
        FPT_ACR_NAME = "testecr"
        REGION = "ap-northeast-2"
        COMMIT_HASH = sh(script: 'git rev-parse --short  HEAD', returnStdout: true).trim()
        SERVICE_NAME = "java"
        AKS_CLUSTER_NAME = "fpt-ams-dev"
    }

    stages {
        // stage("login ECR") {
        //     steps {
        //         sh "docker login $FPT_ACR_URL -u $FPT_ACR_CREDENTIALS_USR -p $FPT_ACR_CREDENTIALS_PSW "
        //     }
        // }
        stage("build image") {
            steps {
                sh "docker build -t $FPT_ACR_URL/$SERVICE_NAME:${COMMIT_HASH}_$BUILD_NUMBER -f Dockerfile ."
                sh "docker tag $FPT_ACR_URL/$SERVICE_NAME:${COMMIT_HASH}_$BUILD_NUMBER $FPT_ACR_URL/$SERVICE_NAME:latest" 
            }
        }
         stage('upload aws ECR') {
            steps {
                script{
                    // cleanup current user docker credentials
                    //sh 'rm -f ~/.dockercfg ~/.docker/config.json || true'
                    
                   
                    docker.withRegistry("https://${FPT_ACR_URL}", "ecr:${REGION}:${FPT_ACR_CREDENTIALS}") {
                      docker.image("$FPT_ACR_URL/$SERVICE_NAME:${COMMIT_HASH}_$BUILD_NUMBER").push()
                      docker.image("$FPT_ACR_URL/$SERVICE_NAME:latest").push()
                    }

                }
            }
         }

    //     stage("push Image") {
    //         steps {
    //             sh "docker push $FPT_ACR_URL/$SERVICE_NAME:${COMMIT_HASH}_$BUILD_NUMBER"
    //             script {
    //      try {
    //          sh 'az acr repository delete --name $FPT_ACR_URL --image $SERVICE_NAME:latest -y'
    //      } catch (Exception e) {
    //          println "ACR remove execution FAILED: ${e.getMessage()} --> SKIP Remove ACR"
    //          currentBuild.result = 'SUCCESS'
    //      }
    //   }
    //             sh "docker push $FPT_ACR_URL/$SERVICE_NAME:latest"             
    //         }
    //     }
        //  stage("check images pushed") {
        //     steps {
        //         //show tag of repository name in ACR
        //         sh"az acr repository show-tags --name $FPT_ACR_NAME --repository $SERVICE_NAME --output table"
        //         //sh"az acr repository list --name $FPT_ACR_NAME --output table"              
        //     }
        // }
        // stage("Deploy to aks") {
        //     steps {
        //         sh('kubectl config use-context $AKS_CLUSTER_NAME')
        //         sh('kubectl apply -f deployment_java.yml')
        //         sh('kubectl apply -f service-java.yml')
        //     }
        // }
}
      
            post {
                always {
                   sh 'docker rmi $FPT_ACR_URL/$SERVICE_NAME:${COMMIT_HASH}_$BUILD_NUMBER'
                   sh 'docker images'
                 
                }
            }
        
}
